name: Deploy to AWS Fargate

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 4: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # Step 5: Build and push multi-architecture Docker images
      - name: Build and push multi-architecture Docker images
        run: |
          IMAGE_TAG=${{ github.sha }}
          echo "Building multi-architecture Docker images..."

          # Build for both amd64 and arm64
          docker buildx build --platform linux/amd64,linux/arm64 \
          -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/expenses-tracker:$IMAGE_TAG \
          -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/expenses-tracker:latest \
          --push .

      # Step 6: Update ECS task definition
      - name: Update ECS task definition
        run: |
          sed -i 's|442474044593.dkr.ecr.us-east-1.amazonaws.com/expenses-tracker:latest|${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/expenses-tracker:${{ github.sha }}|' ecs/task-def.json

      # Step 7: Register ECS task definition
      - name: Register ECS task definition
        run: |
          aws ecs register-task-definition --cli-input-json file://ecs/task-def.json

      # Step 8: Deploy ECS service
      - name: Deploy ECS service
        run: |
          aws ecs update-service --cluster expenses-tracker-cluster-2 --service expenses-tracker-service --force-new-deployment
